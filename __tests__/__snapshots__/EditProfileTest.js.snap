// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<LinearGradient
  colors={
    Array [
      "#1D2842",
      "#3d4b6e",
    ]
  }
  end={
    Object {
      "x": 0.1,
      "y": 0.1,
    }
  }
  start={
    Object {
      "x": 0.1,
      "y": 1,
    }
  }
  style={
    Object {
      "flex": 1,
    }
  }
>
  <KeyboardAvoidingView
    behavior="padding"
    enabled={true}
    keyboardVerticalOffset={0}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <ForwardRef(SafeAreaView)
      style={
        Object {
          "flex": 1,
          "padding": 11.299270072992702,
          "paddingHorizontal": 28.248175182481752,
        }
      }
    >
      <ScrollView>
        <Formik
          initialValues={
            Object {
              "bio": undefined,
              "hashtag": undefined,
              "id": "test",
              "image": Object {
                "name": "",
                "type": "",
                "uri": undefined,
              },
              "name": undefined,
              "username": undefined,
            }
          }
          onSubmit={[Function]}
          validationSchema={
            ObjectSchema {
              "_blacklist": ReferenceSet {
                "list": Set {},
                "refs": Map {},
              },
              "_blacklistError": undefined,
              "_excludedEdges": Array [],
              "_nodes": Array [
                "bio",
                "hashtag",
                "username",
                "name",
              ],
              "_sortErrors": [Function],
              "_typeError": [Function],
              "_whitelist": ReferenceSet {
                "list": Set {},
                "refs": Map {},
              },
              "_whitelistError": undefined,
              "conditions": Array [],
              "deps": Array [],
              "exclusiveTests": Object {},
              "fields": Object {
                "bio": StringSchema {
                  "_blacklist": ReferenceSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_blacklistError": undefined,
                  "_typeError": [Function],
                  "_whitelist": ReferenceSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_whitelistError": undefined,
                  "conditions": Array [],
                  "deps": Array [],
                  "exclusiveTests": Object {
                    "min": true,
                  },
                  "spec": Object {
                    "abortEarly": true,
                    "label": "bio",
                    "meta": undefined,
                    "nullable": false,
                    "presence": "optional",
                    "recursive": true,
                    "strict": false,
                    "strip": false,
                  },
                  "tests": Array [
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                  "type": "string",
                },
                "hashtag": StringSchema {
                  "_blacklist": ReferenceSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_blacklistError": undefined,
                  "_typeError": [Function],
                  "_whitelist": ReferenceSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_whitelistError": undefined,
                  "conditions": Array [],
                  "deps": Array [],
                  "exclusiveTests": Object {
                    "matches": false,
                    "min": true,
                  },
                  "spec": Object {
                    "abortEarly": true,
                    "label": "hashtag",
                    "meta": undefined,
                    "nullable": false,
                    "presence": "optional",
                    "recursive": true,
                    "strict": false,
                    "strip": false,
                  },
                  "tests": Array [
                    [Function],
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                  "type": "string",
                },
                "name": StringSchema {
                  "_blacklist": ReferenceSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_blacklistError": undefined,
                  "_typeError": [Function],
                  "_whitelist": ReferenceSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_whitelistError": undefined,
                  "conditions": Array [],
                  "deps": Array [],
                  "exclusiveTests": Object {
                    "min": true,
                    "required": true,
                  },
                  "spec": Object {
                    "abortEarly": true,
                    "label": "Name",
                    "meta": undefined,
                    "nullable": false,
                    "presence": "required",
                    "recursive": true,
                    "strict": false,
                    "strip": false,
                  },
                  "tests": Array [
                    [Function],
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                  "type": "string",
                },
                "username": StringSchema {
                  "_blacklist": ReferenceSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_blacklistError": undefined,
                  "_mutate": undefined,
                  "_typeError": [Function],
                  "_whitelist": ReferenceSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_whitelistError": undefined,
                  "conditions": Array [],
                  "deps": Array [],
                  "exclusiveTests": Object {
                    "required": true,
                  },
                  "spec": Object {
                    "abortEarly": true,
                    "label": "username",
                    "meta": undefined,
                    "nullable": false,
                    "presence": "required",
                    "recursive": true,
                    "strict": false,
                    "strip": false,
                  },
                  "tests": Array [
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                  "type": "string",
                },
              },
              "spec": Object {
                "abortEarly": true,
                "label": undefined,
                "meta": undefined,
                "nullable": false,
                "presence": "optional",
                "recursive": true,
                "strict": false,
                "strip": false,
              },
              "tests": Array [],
              "transforms": Array [
                [Function],
              ],
              "type": "object",
            }
          }
        >
          [Function]
        </Formik>
      </ScrollView>
    </ForwardRef(SafeAreaView)>
  </KeyboardAvoidingView>
</LinearGradient>
`;
